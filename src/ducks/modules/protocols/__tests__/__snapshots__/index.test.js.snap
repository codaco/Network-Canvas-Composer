// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`protocols saveAndBundleProtocol() invalid protocol dispatches an error when protocol is invalid 1`] = `
Array [
  Array [
    Object {
      "payload": "PROTOCOLS",
      "type": "STATUS/BUSY",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS/SAVING",
      "type": "STATUS/BUSY",
    },
  ],
  Array [
    Object {
      "type": "PROTOCOLS/PREFLIGHT",
    },
  ],
  Array [
    Object {
      "meta": null,
      "protocol": Object {
        "assetManifest": Object {
          "1234-asset-1": Object {
            "source": "1234-4567-asset-1",
          },
          "1234-asset-2": Object {
            "source": "1234-4567-asset-2",
          },
          "1234-asset-3": Object {
            "source": "1234-4567-asset-3",
          },
          "1234-asset-4": Object {
            "source": "1234-4567-asset-4",
          },
          "1234-asset-5": Object {
            "source": "1234-4567-asset-5",
          },
        },
        "codebook": Object {
          "edge": Object {
            "1234-5": Object {
              "color": "blue",
              "name": "an edge",
            },
          },
          "ego": Object {
            "variables": Object {
              "sierra": Object {
                "name": "SIERRA",
                "type": "text",
              },
              "tango": Object {
                "name": "TANGO",
                "type": "text",
              },
            },
          },
          "node": Object {
            "1234-1234-1234": Object {
              "color": "red",
              "name": "1234-1234-1234",
              "variables": Object {
                "1234-1234-1": Object {
                  "name": "my layout",
                  "type": "layout",
                },
                "1234-1234-2": Object {
                  "name": "my category",
                  "type": "categorical",
                },
                "1234-1234-3": Object {
                  "name": "my boolean",
                  "type": "boolean",
                },
                "1234-1234-4": Object {
                  "name": "other boolean 2",
                  "type": "boolean",
                },
                "1234-1234-5": Object {
                  "name": "other boolean 4",
                  "type": "boolean",
                },
              },
            },
            "bar": Object {
              "color": "blue",
              "name": "bar",
              "variables": Object {
                "1234-1234-4": Object {
                  "name": "1234-1234-4",
                  "type": "text",
                },
                "1234-1234-5": Object {
                  "name": "1234-1234-5",
                  "type": "text",
                },
                "alpha": Object {
                  "component": "Text",
                  "name": "ALPHA",
                  "type": "text",
                },
                "bravo": Object {
                  "name": "BRAVO",
                  "type": "text",
                },
                "charlie": Object {
                  "name": "CHARLIE",
                  "type": "location",
                },
              },
            },
            "foo": Object {
              "color": "black",
              "name": "foo",
            },
            "pop": Object {
              "color": "black",
              "name": "pop",
            },
          },
        },
        "name": "fooProtocol",
        "schemaVersion": 4,
      },
      "type": "PROTOCOL/SET",
    },
  ],
  Array [
    Object {
      "type": "PROTOCOLS/SAVE",
    },
  ],
  Array [
    Object {
      "dialog": Object {
        "error": [Error: Protocol.stages should NOT have fewer than 1 items 

],
        "onCancel": [Function],
        "onConfirm": [Function],
        "type": "Error",
      },
      "id": "809895df-bbd7-4c76-ac58-e6ada2625f9b",
      "type": "PROTOCOL/OPEN_DIALOG",
    },
  ],
  Array [
    Object {
      "destinationPath": "/dev/null/fake/user/protocol/path",
      "protocol": Object {
        "assetManifest": Object {
          "1234-asset-1": Object {
            "source": "1234-4567-asset-1",
          },
          "1234-asset-2": Object {
            "source": "1234-4567-asset-2",
          },
          "1234-asset-3": Object {
            "source": "1234-4567-asset-3",
          },
          "1234-asset-4": Object {
            "source": "1234-4567-asset-4",
          },
          "1234-asset-5": Object {
            "source": "1234-4567-asset-5",
          },
        },
        "codebook": Object {
          "edge": Object {
            "1234-5": Object {
              "color": "blue",
              "name": "an edge",
            },
          },
          "ego": Object {
            "variables": Object {
              "sierra": Object {
                "name": "SIERRA",
                "type": "text",
              },
              "tango": Object {
                "name": "TANGO",
                "type": "text",
              },
            },
          },
          "node": Object {
            "1234-1234-1234": Object {
              "color": "red",
              "name": "1234-1234-1234",
              "variables": Object {
                "1234-1234-1": Object {
                  "name": "my layout",
                  "type": "layout",
                },
                "1234-1234-2": Object {
                  "name": "my category",
                  "type": "categorical",
                },
                "1234-1234-3": Object {
                  "name": "my boolean",
                  "type": "boolean",
                },
                "1234-1234-4": Object {
                  "name": "other boolean 2",
                  "type": "boolean",
                },
                "1234-1234-5": Object {
                  "name": "other boolean 4",
                  "type": "boolean",
                },
              },
            },
            "bar": Object {
              "color": "blue",
              "name": "bar",
              "variables": Object {
                "1234-1234-4": Object {
                  "name": "1234-1234-4",
                  "type": "text",
                },
                "1234-1234-5": Object {
                  "name": "1234-1234-5",
                  "type": "text",
                },
                "alpha": Object {
                  "component": "Text",
                  "name": "ALPHA",
                  "type": "text",
                },
                "bravo": Object {
                  "name": "BRAVO",
                  "type": "text",
                },
                "charlie": Object {
                  "name": "CHARLIE",
                  "type": "location",
                },
              },
            },
            "foo": Object {
              "color": "black",
              "name": "foo",
              "variables": Object {},
            },
            "pop": Object {
              "color": "black",
              "name": "pop",
              "variables": Object {},
            },
          },
        },
        "lastModified": "2017-06-27T00:00:00.000Z",
        "name": "fooProtocol",
        "schemaVersion": 4,
        "stages": Array [],
      },
      "type": "PROTOCOLS/SAVE_SUCCESS",
    },
  ],
  Array [
    Object {
      "type": "PROTOCOLS/BUNDLE",
    },
  ],
  Array [
    Object {
      "filePath": "/dev/null/home/documents/1234-active-protocol",
      "type": "PROTOCOLS/BUNDLE_SUCCESS",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS/SAVING",
      "type": "STATUS/READY",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS",
      "type": "STATUS/READY",
    },
  ],
]
`;

exports[`protocols saveAndBundleProtocol() triggers save and export actions 1`] = `
Array [
  Array [
    Object {
      "payload": "PROTOCOLS",
      "type": "STATUS/BUSY",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS/SAVING",
      "type": "STATUS/BUSY",
    },
  ],
  Array [
    Object {
      "type": "PROTOCOLS/PREFLIGHT",
    },
  ],
  Array [
    Object {
      "meta": null,
      "protocol": Object {
        "assetManifest": Object {
          "1234-asset-1": Object {
            "source": "1234-4567-asset-1",
          },
          "1234-asset-2": Object {
            "source": "1234-4567-asset-2",
          },
          "1234-asset-3": Object {
            "source": "1234-4567-asset-3",
          },
          "1234-asset-4": Object {
            "source": "1234-4567-asset-4",
          },
          "1234-asset-5": Object {
            "source": "1234-4567-asset-5",
          },
        },
        "codebook": Object {
          "edge": Object {
            "1234-5": Object {
              "color": "blue",
              "name": "an edge",
            },
          },
          "ego": Object {
            "variables": Object {
              "sierra": Object {
                "name": "SIERRA",
                "type": "text",
              },
              "tango": Object {
                "name": "TANGO",
                "type": "text",
              },
            },
          },
          "node": Object {
            "1234-1234-1234": Object {
              "color": "red",
              "name": "1234-1234-1234",
              "variables": Object {
                "1234-1234-1": Object {
                  "name": "my layout",
                  "type": "layout",
                },
                "1234-1234-2": Object {
                  "name": "my category",
                  "type": "categorical",
                },
                "1234-1234-3": Object {
                  "name": "my boolean",
                  "type": "boolean",
                },
                "1234-1234-4": Object {
                  "name": "other boolean 2",
                  "type": "boolean",
                },
                "1234-1234-5": Object {
                  "name": "other boolean 4",
                  "type": "boolean",
                },
              },
            },
            "bar": Object {
              "color": "blue",
              "name": "bar",
              "variables": Object {
                "1234-1234-4": Object {
                  "name": "1234-1234-4",
                  "type": "text",
                },
                "1234-1234-5": Object {
                  "name": "1234-1234-5",
                  "type": "text",
                },
                "alpha": Object {
                  "component": "Text",
                  "name": "ALPHA",
                  "type": "text",
                },
                "bravo": Object {
                  "name": "BRAVO",
                  "type": "text",
                },
                "charlie": Object {
                  "name": "CHARLIE",
                  "type": "location",
                },
              },
            },
            "foo": Object {
              "color": "black",
              "name": "foo",
            },
            "pop": Object {
              "color": "black",
              "name": "pop",
            },
          },
        },
        "name": "fooProtocol",
        "schemaVersion": 4,
        "stages": Array [
          Object {
            "form": Object {
              "fields": Array [
                Object {
                  "prompt": "message",
                  "variable": "alpha",
                },
                Object {
                  "prompt": "message",
                  "variable": "1234-1234-4",
                },
              ],
            },
            "id": "bazz",
            "label": "bazz",
            "prompts": Array [
              Object {
                "id": "promptId",
                "text": "not a prompt",
              },
            ],
            "subject": Object {
              "entity": "node",
              "type": "bar",
            },
            "type": "NameGenerator",
          },
          Object {
            "form": Object {
              "fields": Array [
                Object {
                  "prompt": "message",
                  "variable": "bravo",
                },
                Object {
                  "prompt": "message",
                  "variable": "1234-1234-5",
                },
              ],
            },
            "id": "pip",
            "label": "pip",
            "prompts": Array [
              Object {
                "id": "promptId",
                "text": "not a prompt",
              },
            ],
            "subject": Object {
              "entity": "node",
              "type": "bar",
            },
            "type": "NameGenerator",
          },
          Object {
            "id": "buzz",
            "label": "buzz",
            "prompts": Array [
              Object {
                "id": "fizz",
                "text": "not a prompt",
              },
            ],
            "subject": Object {
              "entity": "node",
              "type": "foo",
            },
            "type": "NameGenerator",
          },
          Object {
            "id": "foxtrot",
            "label": "foxtrot",
            "prompts": Array [
              Object {
                "id": "golf",
                "text": "not a prompt",
              },
              Object {
                "id": "hotel",
                "text": "not a prompt",
              },
            ],
            "subject": Object {
              "entity": "node",
              "type": "pop",
            },
            "type": "NameGenerator",
          },
          Object {
            "id": "alpha",
            "label": "alpha",
            "prompts": Array [
              Object {
                "edges": Object {
                  "create": "1234-5",
                  "display": Array [
                    "1234-5",
                    "delta",
                    "echo",
                  ],
                },
                "id": "bravo",
                "text": "not a prompt",
              },
            ],
            "subject": Object {
              "entity": "edge",
              "type": "1234-5",
            },
            "type": "Sociogram",
          },
          Object {
            "id": "mike",
            "label": "mike",
            "prompts": Array [
              Object {
                "id": "oscar",
                "text": "not a prompt",
              },
            ],
            "type": "Sociogram",
          },
          Object {
            "background": Object {
              "image": "1234-asset-5",
            },
            "dataSource": "1234-asset-3",
            "id": "assets",
            "items": Array [
              Object {
                "content": "1234-asset-4",
                "id": "itemId",
                "type": "asset",
              },
            ],
            "label": "assets",
            "panels": Array [
              Object {
                "dataSource": "1234-asset-2",
                "id": "panelId",
                "title": "",
              },
            ],
            "prompts": Array [
              Object {
                "id": "promptId",
                "text": "not a prompt",
              },
            ],
            "type": "Information",
          },
        ],
      },
      "type": "PROTOCOL/SET",
    },
  ],
  Array [
    Object {
      "type": "PROTOCOLS/SAVE",
    },
  ],
  Array [
    Object {
      "destinationPath": "/dev/null/fake/user/protocol/path",
      "protocol": Object {
        "assetManifest": Object {
          "1234-asset-1": Object {
            "source": "1234-4567-asset-1",
          },
          "1234-asset-2": Object {
            "source": "1234-4567-asset-2",
          },
          "1234-asset-3": Object {
            "source": "1234-4567-asset-3",
          },
          "1234-asset-4": Object {
            "source": "1234-4567-asset-4",
          },
          "1234-asset-5": Object {
            "source": "1234-4567-asset-5",
          },
        },
        "codebook": Object {
          "edge": Object {
            "1234-5": Object {
              "color": "blue",
              "name": "an edge",
            },
          },
          "ego": Object {
            "variables": Object {
              "sierra": Object {
                "name": "SIERRA",
                "type": "text",
              },
              "tango": Object {
                "name": "TANGO",
                "type": "text",
              },
            },
          },
          "node": Object {
            "1234-1234-1234": Object {
              "color": "red",
              "name": "1234-1234-1234",
              "variables": Object {
                "1234-1234-1": Object {
                  "name": "my layout",
                  "type": "layout",
                },
                "1234-1234-2": Object {
                  "name": "my category",
                  "type": "categorical",
                },
                "1234-1234-3": Object {
                  "name": "my boolean",
                  "type": "boolean",
                },
                "1234-1234-4": Object {
                  "name": "other boolean 2",
                  "type": "boolean",
                },
                "1234-1234-5": Object {
                  "name": "other boolean 4",
                  "type": "boolean",
                },
              },
            },
            "bar": Object {
              "color": "blue",
              "name": "bar",
              "variables": Object {
                "1234-1234-4": Object {
                  "name": "1234-1234-4",
                  "type": "text",
                },
                "1234-1234-5": Object {
                  "name": "1234-1234-5",
                  "type": "text",
                },
                "alpha": Object {
                  "component": "Text",
                  "name": "ALPHA",
                  "type": "text",
                },
                "bravo": Object {
                  "name": "BRAVO",
                  "type": "text",
                },
                "charlie": Object {
                  "name": "CHARLIE",
                  "type": "location",
                },
              },
            },
            "foo": Object {
              "color": "black",
              "name": "foo",
              "variables": Object {},
            },
            "pop": Object {
              "color": "black",
              "name": "pop",
              "variables": Object {},
            },
          },
        },
        "lastModified": "2017-06-27T00:00:00.000Z",
        "name": "fooProtocol",
        "schemaVersion": 4,
        "stages": Array [
          Object {
            "form": Object {
              "fields": Array [
                Object {
                  "prompt": "message",
                  "variable": "alpha",
                },
                Object {
                  "prompt": "message",
                  "variable": "1234-1234-4",
                },
              ],
            },
            "id": "bazz",
            "label": "bazz",
            "prompts": Array [
              Object {
                "id": "promptId",
                "text": "not a prompt",
              },
            ],
            "subject": Object {
              "entity": "node",
              "type": "bar",
            },
            "type": "NameGenerator",
          },
          Object {
            "form": Object {
              "fields": Array [
                Object {
                  "prompt": "message",
                  "variable": "bravo",
                },
                Object {
                  "prompt": "message",
                  "variable": "1234-1234-5",
                },
              ],
            },
            "id": "pip",
            "label": "pip",
            "prompts": Array [
              Object {
                "id": "promptId",
                "text": "not a prompt",
              },
            ],
            "subject": Object {
              "entity": "node",
              "type": "bar",
            },
            "type": "NameGenerator",
          },
          Object {
            "id": "buzz",
            "label": "buzz",
            "prompts": Array [
              Object {
                "id": "fizz",
                "text": "not a prompt",
              },
            ],
            "subject": Object {
              "entity": "node",
              "type": "foo",
            },
            "type": "NameGenerator",
          },
          Object {
            "id": "foxtrot",
            "label": "foxtrot",
            "prompts": Array [
              Object {
                "id": "golf",
                "text": "not a prompt",
              },
              Object {
                "id": "hotel",
                "text": "not a prompt",
              },
            ],
            "subject": Object {
              "entity": "node",
              "type": "pop",
            },
            "type": "NameGenerator",
          },
          Object {
            "id": "alpha",
            "label": "alpha",
            "prompts": Array [
              Object {
                "edges": Object {
                  "create": "1234-5",
                  "display": Array [
                    "1234-5",
                    "delta",
                    "echo",
                  ],
                },
                "id": "bravo",
                "text": "not a prompt",
              },
            ],
            "subject": Object {
              "entity": "edge",
              "type": "1234-5",
            },
            "type": "Sociogram",
          },
          Object {
            "id": "mike",
            "label": "mike",
            "prompts": Array [
              Object {
                "id": "oscar",
                "text": "not a prompt",
              },
            ],
            "type": "Sociogram",
          },
          Object {
            "background": Object {
              "image": "1234-asset-5",
            },
            "dataSource": "1234-asset-3",
            "id": "assets",
            "items": Array [
              Object {
                "content": "1234-asset-4",
                "id": "itemId",
                "type": "asset",
              },
            ],
            "label": "assets",
            "panels": Array [
              Object {
                "dataSource": "1234-asset-2",
                "id": "panelId",
                "title": "",
              },
            ],
            "prompts": Array [
              Object {
                "id": "promptId",
                "text": "not a prompt",
              },
            ],
            "type": "Information",
          },
        ],
      },
      "type": "PROTOCOLS/SAVE_SUCCESS",
    },
  ],
  Array [
    Object {
      "type": "PROTOCOLS/BUNDLE",
    },
  ],
  Array [
    Object {
      "filePath": "/dev/null/home/documents/1234-active-protocol",
      "type": "PROTOCOLS/BUNDLE_SUCCESS",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS/SAVING",
      "type": "STATUS/READY",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS",
      "type": "STATUS/READY",
    },
  ],
]
`;

exports[`protocols unbundleAndLoadProtocol() when the protocol is invalid it dispatches an error when protocol is invalid (but still imports it) 1`] = `
Array [
  Array [
    Object {
      "payload": "PROTOCOLS",
      "type": "STATUS/BUSY",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS/LOADING",
      "type": "STATUS/BUSY",
    },
  ],
  Array [
    Object {
      "type": "PREVIEW/CLOSE_PREVIEW",
    },
  ],
  Array [
    Object {
      "filePath": "/dev/null/mock/path/invalid",
      "type": "PROTOCOLS/UNBUNDLE",
    },
  ],
  Array [
    Object {
      "dialog": Object {
        "error": [Error: Protocol.stages should NOT have fewer than 1 items 

],
        "onCancel": [Function],
        "onConfirm": [Function],
        "type": "Error",
      },
      "id": "809895df-bbd7-4c76-ac58-e6ada2625f9b",
      "type": "PROTOCOL/OPEN_DIALOG",
    },
  ],
  Array [
    Object {
      "filePath": "/dev/null/mock/path/invalid",
      "type": "PROTOCOLS/UNBUNDLE_SUCCESS",
      "workingPath": "/dev/null/get/electron/path/protocols/809895df-bbd7-4c76-ac58-e6ada2625f9b",
    },
  ],
  Array [
    Object {
      "advanced": true,
      "filePath": "/dev/null/mock/path/invalid",
      "id": "809895df-bbd7-4c76-ac58-e6ada2625f9b",
      "type": "PROTOCOLS/REGISTER",
      "workingPath": "/dev/null/get/electron/path/protocols/809895df-bbd7-4c76-ac58-e6ada2625f9b",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS/LOADING",
      "type": "STATUS/READY",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS",
      "type": "STATUS/READY",
    },
  ],
]
`;

exports[`protocols unbundleAndLoadProtocol() when the schema version is greater than the app version it notifies user to upgrade the app 1`] = `
Array [
  Array [
    Object {
      "payload": "PROTOCOLS",
      "type": "STATUS/BUSY",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS/LOADING",
      "type": "STATUS/BUSY",
    },
  ],
  Array [
    Object {
      "type": "PREVIEW/CLOSE_PREVIEW",
    },
  ],
  Array [
    Object {
      "filePath": "/dev/null/mock/path/newer-protocol",
      "type": "PROTOCOLS/UNBUNDLE",
    },
  ],
  Array [
    Object {
      "dialog": Object {
        "message": <React.Fragment>
          <p>
            This protocol is not compatible with the current version of Architect.
          </p>
          <p>
            In order to open it, you will need to install a version of Architect that supports schema version 
            5
            .
          </p>
        </React.Fragment>,
        "onCancel": [Function],
        "onConfirm": [Function],
        "title": "Protocol not compatible with current version",
        "type": "UserError",
      },
      "id": "809895df-bbd7-4c76-ac58-e6ada2625f9b",
      "type": "PROTOCOL/OPEN_DIALOG",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS/LOADING",
      "type": "STATUS/READY",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS",
      "type": "STATUS/READY",
    },
  ],
]
`;

exports[`protocols unbundleAndLoadProtocol() when the schema version is less than the app version it attempts to upgrade protocol and then imports it 1`] = `
Array [
  Array [
    Object {
      "payload": "PROTOCOLS",
      "type": "STATUS/BUSY",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS/LOADING",
      "type": "STATUS/BUSY",
    },
  ],
  Array [
    Object {
      "type": "PREVIEW/CLOSE_PREVIEW",
    },
  ],
  Array [
    Object {
      "filePath": "/dev/null/mock/path/older-protocol",
      "type": "PROTOCOLS/UNBUNDLE",
    },
  ],
  Array [
    Object {
      "dialog": Object {
        "confirmLabel": "Create upgraded copy",
        "message": <React.Fragment>
          <p>
            This protocol uses an out-dated schema (schema version "
            3
            "), but can be upgraded to work with this version of Architect (schema version "
            4
            ").
          </p>
          <p>
            An upgraded copy of the protocol will be created and then opened.
          </p>
        </React.Fragment>,
        "onCancel": [Function],
        "onConfirm": [Function],
        "title": "Would you like to upgrade the protocol?",
        "type": "Confirm",
      },
      "id": "809895df-bbd7-4c76-ac58-e6ada2625f9b",
      "type": "PROTOCOL/OPEN_DIALOG",
    },
  ],
  Array [
    Object {
      "filePath": "filename.canvas",
      "type": "PROTOCOLS/UNBUNDLE_SUCCESS",
      "workingPath": "/dev/null/get/electron/path/protocols/809895df-bbd7-4c76-ac58-e6ada2625f9b",
    },
  ],
  Array [
    Object {
      "advanced": true,
      "filePath": "filename.canvas",
      "id": "809895df-bbd7-4c76-ac58-e6ada2625f9b",
      "type": "PROTOCOLS/REGISTER",
      "workingPath": "/dev/null/get/electron/path/protocols/809895df-bbd7-4c76-ac58-e6ada2625f9b",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS/LOADING",
      "type": "STATUS/READY",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS",
      "type": "STATUS/READY",
    },
  ],
]
`;

exports[`protocols unbundleAndLoadProtocol() when the schema version is the same as the app version it imports the protocol 1`] = `
Array [
  Array [
    Object {
      "payload": "PROTOCOLS",
      "type": "STATUS/BUSY",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS/LOADING",
      "type": "STATUS/BUSY",
    },
  ],
  Array [
    Object {
      "type": "PREVIEW/CLOSE_PREVIEW",
    },
  ],
  Array [
    Object {
      "filePath": "/dev/null/mock/path/matching-protocol",
      "type": "PROTOCOLS/UNBUNDLE",
    },
  ],
  Array [
    Object {
      "filePath": "/dev/null/mock/path/matching-protocol",
      "type": "PROTOCOLS/UNBUNDLE_SUCCESS",
      "workingPath": "/dev/null/get/electron/path/protocols/809895df-bbd7-4c76-ac58-e6ada2625f9b",
    },
  ],
  Array [
    Object {
      "advanced": true,
      "filePath": "/dev/null/mock/path/matching-protocol",
      "id": "809895df-bbd7-4c76-ac58-e6ada2625f9b",
      "type": "PROTOCOLS/REGISTER",
      "workingPath": "/dev/null/get/electron/path/protocols/809895df-bbd7-4c76-ac58-e6ada2625f9b",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS/LOADING",
      "type": "STATUS/READY",
    },
  ],
  Array [
    Object {
      "payload": "PROTOCOLS",
      "type": "STATUS/READY",
    },
  ],
]
`;
