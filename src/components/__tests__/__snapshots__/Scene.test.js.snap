// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Scene /> can render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Scene
    handleClickStart={[Function]}
    hasProtocol={false}
    isLoading={false}
    location={Object {}}
    protocolId={null}
    protocolMeta={
      Object {
        "filePath": "/foo/bar",
      }
    }
    protocolPath={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="scene__background scene__background--top"
        />,
        <div
          className="scene__background scene__background--bottom"
        />,
        <img
          alt=""
          className="scene__brand"
          src="network-canvas-brand.svg"
        />,
        <div
          className="scene__home"
        >
          <Icon
            className="start-button__arrow"
            color=""
            name="back-arrow"
            onClick={[Function]}
            style={Object {}}
          />
        </div>,
        <AnimatePresence />,
        <n
          applyTransformOrigin={true}
          element="div"
          flipKey="start"
          retainTransform={false}
        >
          <div
            className="scene__start"
          >
            <Connect(Start)
              show={true}
            />
          </div>
          <div
            className="scene__recent-protocols"
          >
            <Connect(RecentProtocols)
              show={true}
            />
          </div>
          <div
            className="scene__protocol"
          >
            <Connect(Overview)
              flipId={null}
              show={false}
            />
            <div
              className="scene__timeline"
            >
              <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                show={false}
              />
            </div>
            <Connect(ProtocolControlBar)
              show={false}
            />
          </div>
        </n>,
        <Connect(Screens) />,
      ],
      "className": "scene",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "scene__background scene__background--top",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "scene__background scene__background--bottom",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "",
          "className": "scene__brand",
          "src": "network-canvas-brand.svg",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Icon
            className="start-button__arrow"
            color=""
            name="back-arrow"
            onClick={[Function]}
            style={Object {}}
          />,
          "className": "scene__home",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "start-button__arrow",
            "color": "",
            "name": "back-arrow",
            "onClick": [Function],
            "style": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": false,
        },
        "ref": null,
        "rendered": false,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "applyTransformOrigin": true,
          "children": Array [
            <div
              className="scene__start"
            >
              <Connect(Start)
                show={true}
              />
            </div>,
            <div
              className="scene__recent-protocols"
            >
              <Connect(RecentProtocols)
                show={true}
              />
            </div>,
            <div
              className="scene__protocol"
            >
              <Connect(Overview)
                flipId={null}
                show={false}
              />
              <div
                className="scene__timeline"
              >
                <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                  show={false}
                />
              </div>
              <Connect(ProtocolControlBar)
                show={false}
              />
            </div>,
          ],
          "element": "div",
          "flipKey": "start",
          "retainTransform": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Connect(Start)
                show={true}
              />,
              "className": "scene__start",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "show": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Connect(RecentProtocols)
                show={true}
              />,
              "className": "scene__recent-protocols",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "show": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Connect(Overview)
                  flipId={null}
                  show={false}
                />,
                <div
                  className="scene__timeline"
                >
                  <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                    show={false}
                  />
                </div>,
                <Connect(ProtocolControlBar)
                  show={false}
                />,
              ],
              "className": "scene__protocol",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "flipId": null,
                  "show": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                    show={false}
                  />,
                  "className": "scene__timeline",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "show": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "show": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="scene__background scene__background--top"
          />,
          <div
            className="scene__background scene__background--bottom"
          />,
          <img
            alt=""
            className="scene__brand"
            src="network-canvas-brand.svg"
          />,
          <div
            className="scene__home"
          >
            <Icon
              className="start-button__arrow"
              color=""
              name="back-arrow"
              onClick={[Function]}
              style={Object {}}
            />
          </div>,
          <AnimatePresence />,
          <n
            applyTransformOrigin={true}
            element="div"
            flipKey="start"
            retainTransform={false}
          >
            <div
              className="scene__start"
            >
              <Connect(Start)
                show={true}
              />
            </div>
            <div
              className="scene__recent-protocols"
            >
              <Connect(RecentProtocols)
                show={true}
              />
            </div>
            <div
              className="scene__protocol"
            >
              <Connect(Overview)
                flipId={null}
                show={false}
              />
              <div
                className="scene__timeline"
              >
                <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                  show={false}
                />
              </div>
              <Connect(ProtocolControlBar)
                show={false}
              />
            </div>
          </n>,
          <Connect(Screens) />,
        ],
        "className": "scene",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "scene__background scene__background--top",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "scene__background scene__background--bottom",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "",
            "className": "scene__brand",
            "src": "network-canvas-brand.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className="start-button__arrow"
              color=""
              name="back-arrow"
              onClick={[Function]}
              style={Object {}}
            />,
            "className": "scene__home",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "start-button__arrow",
              "color": "",
              "name": "back-arrow",
              "onClick": [Function],
              "style": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": false,
          },
          "ref": null,
          "rendered": false,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "applyTransformOrigin": true,
            "children": Array [
              <div
                className="scene__start"
              >
                <Connect(Start)
                  show={true}
                />
              </div>,
              <div
                className="scene__recent-protocols"
              >
                <Connect(RecentProtocols)
                  show={true}
                />
              </div>,
              <div
                className="scene__protocol"
              >
                <Connect(Overview)
                  flipId={null}
                  show={false}
                />
                <div
                  className="scene__timeline"
                >
                  <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                    show={false}
                  />
                </div>
                <Connect(ProtocolControlBar)
                  show={false}
                />
              </div>,
            ],
            "element": "div",
            "flipKey": "start",
            "retainTransform": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(Start)
                  show={true}
                />,
                "className": "scene__start",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "show": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(RecentProtocols)
                  show={true}
                />,
                "className": "scene__recent-protocols",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "show": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Connect(Overview)
                    flipId={null}
                    show={false}
                  />,
                  <div
                    className="scene__timeline"
                  >
                    <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                      show={false}
                    />
                  </div>,
                  <Connect(ProtocolControlBar)
                    show={false}
                  />,
                ],
                "className": "scene__protocol",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "flipId": null,
                    "show": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                      show={false}
                    />,
                    "className": "scene__timeline",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "show": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "show": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`<Scene /> shows protocol when there is one 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Scene
    handleClickStart={[Function]}
    location={Object {}}
    protocolMeta={
      Object {
        "filePath": "/foo/bar",
        "id": "foo",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="scene__background scene__background--top"
        />,
        <div
          className="scene__background scene__background--bottom"
        />,
        <img
          alt=""
          className="scene__brand"
          src="network-canvas-brand.svg"
        />,
        <div
          className="scene__home"
        >
          <Icon
            className="start-button__arrow"
            color=""
            name="back-arrow"
            onClick={[Function]}
            style={Object {}}
          />
        </div>,
        <n
          applyTransformOrigin={true}
          element="div"
          flipKey="foo"
          retainTransform={false}
        >
          <div
            className="scene__start"
          >
            <Connect(Start)
              show={false}
            />
          </div>
          <div
            className="scene__recent-protocols"
          >
            <Connect(RecentProtocols)
              show={false}
            />
          </div>
          <div
            className="scene__protocol"
          >
            <Connect(Overview)
              flipId="%2Ffoo%2Fbar"
              show={true}
            />
            <div
              className="scene__timeline"
            >
              <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                show={true}
              />
            </div>
            <Connect(ProtocolControlBar)
              show={true}
            />
          </div>
        </n>,
        <Connect(Screens) />,
      ],
      "className": "scene scene--protocol",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "scene__background scene__background--top",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "scene__background scene__background--bottom",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "",
          "className": "scene__brand",
          "src": "network-canvas-brand.svg",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Icon
            className="start-button__arrow"
            color=""
            name="back-arrow"
            onClick={[Function]}
            style={Object {}}
          />,
          "className": "scene__home",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "start-button__arrow",
            "color": "",
            "name": "back-arrow",
            "onClick": [Function],
            "style": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "applyTransformOrigin": true,
          "children": Array [
            <div
              className="scene__start"
            >
              <Connect(Start)
                show={false}
              />
            </div>,
            <div
              className="scene__recent-protocols"
            >
              <Connect(RecentProtocols)
                show={false}
              />
            </div>,
            <div
              className="scene__protocol"
            >
              <Connect(Overview)
                flipId="%2Ffoo%2Fbar"
                show={true}
              />
              <div
                className="scene__timeline"
              >
                <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                  show={true}
                />
              </div>
              <Connect(ProtocolControlBar)
                show={true}
              />
            </div>,
          ],
          "element": "div",
          "flipKey": "foo",
          "retainTransform": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Connect(Start)
                show={false}
              />,
              "className": "scene__start",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "show": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Connect(RecentProtocols)
                show={false}
              />,
              "className": "scene__recent-protocols",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "show": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Connect(Overview)
                  flipId="%2Ffoo%2Fbar"
                  show={true}
                />,
                <div
                  className="scene__timeline"
                >
                  <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                    show={true}
                  />
                </div>,
                <Connect(ProtocolControlBar)
                  show={true}
                />,
              ],
              "className": "scene__protocol",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "flipId": "%2Ffoo%2Fbar",
                  "show": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                    show={true}
                  />,
                  "className": "scene__timeline",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "show": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "show": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="scene__background scene__background--top"
          />,
          <div
            className="scene__background scene__background--bottom"
          />,
          <img
            alt=""
            className="scene__brand"
            src="network-canvas-brand.svg"
          />,
          <div
            className="scene__home"
          >
            <Icon
              className="start-button__arrow"
              color=""
              name="back-arrow"
              onClick={[Function]}
              style={Object {}}
            />
          </div>,
          <n
            applyTransformOrigin={true}
            element="div"
            flipKey="foo"
            retainTransform={false}
          >
            <div
              className="scene__start"
            >
              <Connect(Start)
                show={false}
              />
            </div>
            <div
              className="scene__recent-protocols"
            >
              <Connect(RecentProtocols)
                show={false}
              />
            </div>
            <div
              className="scene__protocol"
            >
              <Connect(Overview)
                flipId="%2Ffoo%2Fbar"
                show={true}
              />
              <div
                className="scene__timeline"
              >
                <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                  show={true}
                />
              </div>
              <Connect(ProtocolControlBar)
                show={true}
              />
            </div>
          </n>,
          <Connect(Screens) />,
        ],
        "className": "scene scene--protocol",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "scene__background scene__background--top",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "scene__background scene__background--bottom",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "",
            "className": "scene__brand",
            "src": "network-canvas-brand.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className="start-button__arrow"
              color=""
              name="back-arrow"
              onClick={[Function]}
              style={Object {}}
            />,
            "className": "scene__home",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "start-button__arrow",
              "color": "",
              "name": "back-arrow",
              "onClick": [Function],
              "style": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "applyTransformOrigin": true,
            "children": Array [
              <div
                className="scene__start"
              >
                <Connect(Start)
                  show={false}
                />
              </div>,
              <div
                className="scene__recent-protocols"
              >
                <Connect(RecentProtocols)
                  show={false}
                />
              </div>,
              <div
                className="scene__protocol"
              >
                <Connect(Overview)
                  flipId="%2Ffoo%2Fbar"
                  show={true}
                />
                <div
                  className="scene__timeline"
                >
                  <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                    show={true}
                  />
                </div>
                <Connect(ProtocolControlBar)
                  show={true}
                />
              </div>,
            ],
            "element": "div",
            "flipKey": "foo",
            "retainTransform": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(Start)
                  show={false}
                />,
                "className": "scene__start",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "show": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(RecentProtocols)
                  show={false}
                />,
                "className": "scene__recent-protocols",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "show": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Connect(Overview)
                    flipId="%2Ffoo%2Fbar"
                    show={true}
                  />,
                  <div
                    className="scene__timeline"
                  >
                    <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                      show={true}
                    />
                  </div>,
                  <Connect(ProtocolControlBar)
                    show={true}
                  />,
                ],
                "className": "scene__protocol",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "flipId": "%2Ffoo%2Fbar",
                    "show": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <withRouter(withStateHandlers(defaultProps(Connect(sortableList(Timeline)))))
                      show={true}
                    />,
                    "className": "scene__timeline",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "show": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "show": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
