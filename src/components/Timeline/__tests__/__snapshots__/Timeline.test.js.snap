// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Timeline /> can render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Timeline
    deleteStage={[Function]}
    onCreateStage={[Function]}
    onEditSkipLogic={[Function]}
    onEditStage={[Function]}
    overview={Object {}}
    stages={Array []}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="timeline__main"
>
        <div
                className="timeline__background"
        />
        <div
                className="timeline__content"
        >
                <Connect(withRouter()) />
                <div
                        className="timeline__stages"
                >
                        <TransitionGroup
                                childFactory={[Function]}
                                component="div"
                        >
                                
                        </TransitionGroup>
                        <InsertStage
                                handleCancel={null}
                                handleSelectStage={[Function]}
                        />
                </div>
        </div>
</div>,
      "className": "timeline",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="timeline__background"
/>,
          <div
            className="timeline__content"
>
            <Connect(withRouter()) />
            <div
                        className="timeline__stages"
            >
                        <TransitionGroup
                                    childFactory={[Function]}
                                    component="div"
                        >
                                    
                        </TransitionGroup>
                        <InsertStage
                                    handleCancel={null}
                                    handleSelectStage={[Function]}
                        />
            </div>
</div>,
        ],
        "className": "timeline__main",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "timeline__background",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Connect(withRouter()) />,
              <div
                className="timeline__stages"
>
                <TransitionGroup
                                childFactory={[Function]}
                                component="div"
                >
                                
                </TransitionGroup>
                <InsertStage
                                handleCancel={null}
                                handleSelectStage={[Function]}
                />
</div>,
            ],
            "className": "timeline__content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  false,
                  <TransitionGroup
                    childFactory={[Function]}
                    component="div"
>
                    
</TransitionGroup>,
                  <InsertStage
                    handleCancel={null}
                    handleSelectStage={[Function]}
/>,
                ],
                "className": "timeline__stages",
              },
              "ref": null,
              "rendered": Array [
                false,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "childFactory": [Function],
                    "children": Array [],
                    "component": "div",
                  },
                  "ref": null,
                  "rendered": Array [],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "insertStage",
                  "nodeType": "class",
                  "props": Object {
                    "handleCancel": null,
                    "handleSelectStage": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="timeline__main"
>
          <div
                    className="timeline__background"
          />
          <div
                    className="timeline__content"
          >
                    <Connect(withRouter()) />
                    <div
                              className="timeline__stages"
                    >
                              <TransitionGroup
                                        childFactory={[Function]}
                                        component="div"
                              >
                                        
                              </TransitionGroup>
                              <InsertStage
                                        handleCancel={null}
                                        handleSelectStage={[Function]}
                              />
                    </div>
          </div>
</div>,
        "className": "timeline",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="timeline__background"
/>,
            <div
              className="timeline__content"
>
              <Connect(withRouter()) />
              <div
                            className="timeline__stages"
              >
                            <TransitionGroup
                                          childFactory={[Function]}
                                          component="div"
                            >
                                          
                            </TransitionGroup>
                            <InsertStage
                                          handleCancel={null}
                                          handleSelectStage={[Function]}
                            />
              </div>
</div>,
          ],
          "className": "timeline__main",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "timeline__background",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Connect(withRouter()) />,
                <div
                  className="timeline__stages"
>
                  <TransitionGroup
                                    childFactory={[Function]}
                                    component="div"
                  >
                                    
                  </TransitionGroup>
                  <InsertStage
                                    handleCancel={null}
                                    handleSelectStage={[Function]}
                  />
</div>,
              ],
              "className": "timeline__content",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    false,
                    <TransitionGroup
                      childFactory={[Function]}
                      component="div"
>
                      
</TransitionGroup>,
                    <InsertStage
                      handleCancel={null}
                      handleSelectStage={[Function]}
/>,
                  ],
                  "className": "timeline__stages",
                },
                "ref": null,
                "rendered": Array [
                  false,
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "childFactory": [Function],
                      "children": Array [],
                      "component": "div",
                    },
                    "ref": null,
                    "rendered": Array [],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "insertStage",
                    "nodeType": "class",
                    "props": Object {
                      "handleCancel": null,
                      "handleSelectStage": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
